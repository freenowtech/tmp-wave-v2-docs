"use strict";(self.webpackChunk_freenow_wave=self.webpackChunk_freenow_wave||[]).push([[77523],{"./src/components/Box/docs/Box.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Inline:()=>Inline,Responsive:()=>Responsive,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Box",component:__webpack_require__("./src/components/Box/Box.tsx").x},Default={args:{children:"By default it is a block `div` element"}},Inline={args:{as:"span",children:"I can be inline when `as` prop is used"}},Responsive={args:{children:"I can be responsive",bg:"#FF9CFC",width:[1,1,.5]}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    children: 'By default it is a block `div` element'\n  }\n}",...Default.parameters?.docs?.source}}},Inline.parameters={...Inline.parameters,docs:{...Inline.parameters?.docs,source:{originalSource:"{\n  args: {\n    as: 'span',\n    children: 'I can be inline when `as` prop is used'\n  }\n}",...Inline.parameters?.docs?.source}}},Responsive.parameters={...Responsive.parameters,docs:{...Responsive.parameters?.docs,source:{originalSource:"{\n  args: {\n    children: 'I can be responsive',\n    bg: '#FF9CFC',\n    width: [1, 1, 1 / 2]\n  }\n}",...Responsive.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Inline","Responsive"]}}]);